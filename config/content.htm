<h1>介紹Github的操作說明</h1>
<p>在Github中尋找一線生機。並尋求對程式的熱情。</p>
<p><img src="/images/8.png" width="393" height="390" alt=""></p>
<p></p>
<p></p>
<p></p>
<p><span style="color: #000000;"></span></p>
<h2>什麼是CMSimfly?</h2>
<p>在python裡所主要作棟的軟體(?</p>
<p>缺一不可的重要腳色非他莫屬。</p>
<h2>甚麼是python?</h2><h5><span style="color: #ff0000;">容易撰寫</span></h5><p>Python 通常可以靠比較短的程式碼完成比較多的功能，或者可以寫得比較清楚。</p><h5><span style="color: #ff0000;">功能強大</span></h5><p>Python絕大部分都是開放原始碼的，與主要作業系統的支援功能等等，含括的範圍非常地廣泛。</p><h5><span style="color: #ff0000;">跨平台</span></h5><p>各種主要的作業系統都支援 Python。Python 程式常常不需要修改。所撰寫的 Python 程式透過標準的模組進行包裝後，用標準的方式即可安裝於各種平台。</p><h5><span style="color: #ff0000;">容易擴充</span></h5><p>Python 算是執行效率不錯的直譯式語言。Python本身被設計為可擴充的。因此，有很多人把Python作為一種「膠水語言」（glue language）使用。使用Python將其他語言編寫的程式進行整合和封裝。</p><p></p><h2>reveal 投影片</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/reveal.leo</p>
<h2>pelican 網誌</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/pelican.leo&nbsp;</p>
<p>各分組必須自行更改&nbsp;@edit pelicanconf.py 中的 AUTHOR 與 SITENAME</p>
<p>更改 @edit publishconf.py 中的 SITEURL</p>
<p></p>
<h1>指令操作</h1>
<p><span style="color: #ff6600;">1.嘗試將程式碼打出</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">&lt;p&gt;&lt;button onlick="myFunction()"&gt;Try it&lt;/button&gt;&lt;/p&gt;
&lt;p id="demo"&gt;&lt;p/&gt;
&lt;script&gt;// &lt;![CDATA[
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*9);
}
// ]]&gt;&lt;/script&gt;</pre>
<p><span style="color: #ff6600;">2.指令碼練習</span><br><br></p>
<p><span><span style="color: #ff0000;">D:&nbsp;</span>&nbsp;去D槽之區域gi&nbsp;</span></p>
<p><span color="#000000"><span style="color: #ff0000;">cd&nbsp;</span><span>&nbsp;</span>進入資料夾</span></p>
<p><span style="color: #ff0000;">cd \</span>&nbsp; &nbsp;or<span>&nbsp;</span><span>cd .</span>返回根目錄</p>
<p><span style="color: #ff0000;">git init&nbsp;</span>增加數據庫</p>
<p><span style="color: #ff0000;">git clone</span>下載(後面需增加網址)</p>
<p><span style="color: #ff0000;">git add .</span>&nbsp; 快照，將工作區資料加入索引</p>
<p><span style="color: #ff0000;">git status</span>確認工作目錄與索引狀態</p>
<p><span style="color: #ff0000;">git pull</span>檢查近遠端是否連接</p>
<p><span><span style="color: #ff0000;">git commit -m</span> "檔案名稱"</span>推送上去之前所包裝之資料夾</p>
<p><span color="#000000"><span style="color: #ff0000;">git push</span>推送(會問帳號密碼)</span></p>
<p><span color="#000000"><span style="color: #ff0000;">git branch</span>查看分支</span></p>
<p><span color="#000000"><span><span style="color: #ff0000;">git merge</span>(分支名稱)&nbsp;</span>將某分支合併到目前分支，有commit</span></p>
<p><span color="#000000"><span><span style="color: #ff0000;">git rebase</span>(分支名稱)&nbsp;</span>將目前分支合併到某分支中，不會有commit</span></p>
<p><span color="#000000"><span style="color: #ff0000;">git&nbsp; checkout</span><span>&nbsp;</span>將開端移動HEAD</span></p>
<p><span color="#000000"><span style="color: #ff0000;">git log</span>檢視提交紀錄</span></p>
<p><span color="#000000"><span><span style="color: #ff0000;">git log --oneline --graph --</span>all</span>要求出現開頭的列表</span></p>
<p><span color="#000000"><span style="color: #ff0000;">git diff</span>查看上一個資料</span></p>
<p><span color="#000000"><span style="color: #ff0000;">git stash</span>移除上一個資料</span></p>
<p><span color="#000000"><span style="color: #ff0000;">python&nbsp; --version</span>查看python之版本</span></p>
<p><span color="#000000"><span style="color: #ff0000;">git remote&nbsp;</span>顯示遠端儲存庫</span></p>
<p><span style="color: #ff0000;">git clean&nbsp;</span>刪除工作區中未被追蹤的文件</p>
<h1>上學期內容</h1>
<p>首次接觸github倉儲經過與成品報告。</p>
<h2>Week1</h2>
<h5>進入<strong>github</strong>近端之前流程，更改密碼與日誌標題，與儲存提交程式碼的步驟。<iframe width="1381" height="489" src="https://www.youtube.com/embed/tJLm3IDbi54" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen"></iframe></h5>
<p><span>.</span></p>
<h2>Week2</h2>
<h4>投影片更改</h4>
<h5><strong>1.</strong>將<strong>reveal.ieo</strong>丟入<strong>workbook.leo</strong>裡面</h5>
<p><img src="/images/chrome_2018-10-31_21-15-03.png" width="500" height="351" alt=""></p>
<h5><strong>2.</strong>開始隨意更改.完成</h5>
<p><img src="/images/chrome_2018-10-31_21-16-30.png" width="521" height="341" alt=""></p>
<h4>網址更改</h4>
<h5><strong>1.</strong>將<strong>pelican.leo</strong>丟入<strong>workbook.leo</strong></h5>
<h5><strong>2</strong>.按近端<strong>local-blog</strong>右鍵<strong>Goto Script</strong>，之後再按一次<strong>local-blog</strong></h5>
<p><img src="/images/python_2018-10-31_21-36-53.png" width="500" height="209" alt=""></p>
<p><strong>3.</strong>按遠端下的<strong>@edit.publisheonf.py</strong>(在公用裡面)</p>
<p><img src="/images/python_2018-10-31_21-37-18.png" width="500" height="284" alt=""></p>
<h5><strong>4.</strong>更改<strong>17</strong>行的網址，更改成<strong>"https://mdecadp2018.github.io/site-s40723103/blog"</strong></h5>
<p>&nbsp; .<img src="/images/python_2018-10-31_21-37-52.png" width="500" height="229" alt=""></p>
<h5>&nbsp; 更改<strong>33</strong>行的網址，<strong>"mdecadp2018"</strong></h5>
<p><img src="/images/python_2018-10-31_21-38-08.png" width="500" height="238" alt=""></p>
<h5><strong>5.</strong>按遠端<strong>github.blog</strong>右鍵<strong>Goto Script</strong> 在按一次<strong>github.blog</strong></h5>
<p></p>
<p></p>
<h2>Week3</h2>
<h4>指令操作流程</h4>
<p><iframe width="1381" height="489" src="https://www.youtube.com/embed/srcm_CiWVtI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen"></iframe></p>
<h2>week4</h2>
<p><span style="color: #ff0000;">.投影片、Blog更改</span></p>
<p>1.進入遠端</p>
<p>2.git pull 意思為將遠端資料抓到靜端裡面</p>
<p>3.連結近端(打python wsgi.py)</p>
<p>4.打開workbook.leo並將reveal.leo開啟</p>
<p><img src="/images/2018-11-02_15-34-52.png" width="500" height="274" alt=""></p>
<p>5.複製投影片，貼上，改名稱，並輸入以下程式碼。</p>
<p><img src="/images/python_2018-11-02_15-39-02.png" width="500" height="333" alt=""></p>
<p>6.並將名稱部分加入中括號，後面的小括號是網址連結。</p>
<p><img src="/images/python_2018-11-02_15-42-39.png" width="508" height="141" alt=""></p>
<p>7.開起遠端網頁，即可看到投影片上的文字連結。</p>
<p><img src="/images/explorer_2018-11-02_15-45-05.png" width="500" height="335" alt=""></p>
<p><img src="/images/explorer_2018-11-02_15-44-53.png" width="280" height="69" alt=""></p>
<p><img src="/images/ApplicationFrameHost_2018-11-02_15-45-24.png" width="500" height="332" alt=""></p>
<p>8.完成所有步驟，並將指令做提交的動作。</p>
<p>(ex:git commit and&amp;nbsp; git push)</p>
<p></p>
<h2>week5</h2>
<p><span style="color: #ff0000;">onshape 操作與指令</span></p>
<p>進入遠端之後再到實習操作onshape week1之onshape1-1</p>
<p>詳細閱讀上頭的資訊後即可操作接下來的步驟</p>
<p>先去onshape建立一個帳號</p>
<p><img src="/images/chrome_2018-11-02_16-02-26.png" width="550" height="269" alt=""></p>
<p>先檢視單位是否正確，先看到像是三的符號，點進去按下<span style="color: #ff0000;">工作區單位<span style="color: #000000;">，即可更改單位。</span></span></p>
<p><img src="/images/chrome_2018-11-02_16-01-30.png" width="405" height="538" alt=""></p>
<p>之後開啟草圖</p>
<p>如果想要轉正視圖的話按右鍵之view normal to sketch plane</p>
<p><img src="/images/chrome_2018-11-02_16-00-31.png" width="550" height="269" alt=""></p>
<p>即可開始繪圖</p>
<p><img src="/images/chrome_2018-11-02_16-00-59.png" width="550" height="269" alt=""></p>
<p><span style="color: #ff0000;">修改草圖</span></p>
<p><span style="color: #000000;">按旁邊列表裡的草圖，右鍵之後編輯</span></p>
<p><span style="color: #000000;"><img src="/images/chrome_2018-11-08_23-07-12.png" width="500" height="235" alt=""></span></p>
<p><span style="color: #ff0000;">多一個圖層</span></p>
<p><span style="color: #000000;">往偏右上方的部分，有一個類似正方形的按鍵，可做偏移等編輯</span></p>
<p><span style="color: #000000;"><img src="/images/chrome_2018-11-08_23-11-13.png" width="550" height="282" alt=""></span></p>
<p></p>
<h2>week6-0</h2>
<p>主要教學print的相關程式碼</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#導入sys模組
import sys
#導入keyword模組
import keyword

#利用sys模組中的version_info印出Python版次
print("Python version: "，sys.version_info)
#利用keyword模組中的kwlist印出關鍵字
print("Python keyword: "，keyword.kwlist)
print("Total number of Python keyword: "，len(keyword.kwlist))</pre>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<h4></h4>
<p></p>
<h2>week6</h2>
<p>筆記重點內容，主要是紀錄print的使用方式與了解細節內容的部分。</p>
<p><img src="/images/0002.jpg" width="500" height="401" alt=""></p>
<p>並且記錄如何解決上周blog名稱產生衝突的解決辦法。</p>
<p><img src="/images/chrome_2018-11-09_11-40-29.png" width="591" height="193" alt=""></p>
<p>解釋python程式取出近端網址方法；主要分為三種</p>
<p><img src="/images/00001.jpg" width="500" height="318" alt=""></p>
<p>在例子中解取程式之間的內容與使用程式意義。</p>
<p><img src="/images/0003.jpg" width="500" height="653" alt=""></p>
<p>如此一來便即可深入了解print與python之間的連結。</p>
<p></p>
<h2>week7</h2>
<p><span style="color: #ff0000;">學習範圍:內建函式熟記。</span></p>
<p><img src="/images/chrome_2018-11-09_11-49-43.png" width="550" height="323" alt=""></p>
<p>且瞭解其中含意。</p>
<p><img src="/images/chrome_2018-11-09_11-48-14.png" width="550" height="372" alt=""></p>
<p>先觀察<span style="color: #ff0000;">6-0</span>的程式碼，裏頭有些限制必須了解。</p>
<p><img src="/images/0004.jpg" width="550" height="900" alt=""></p>
<p>熟記並了解，之後程式碼自己就可以自己打了&lt;3</p>
<p></p>
<h2>week8</h2>
<p><span style="color: #ff0000;">學習要點:</span></p>
<p>懂得網際程式Flask如何運用在自己的CMSimfly中的wsgi裡面之參數式。</p>
<p><img src="/images/0005.jpg" width="550" height="636" alt=""></p>
<p>開始了解科系中設計部分順序與設計意圖</p>
<p><span style="color: #ff0000;">補；設計意圖為主要設計之構想與使用機構之意義存在。</span></p>
<h1></h1>
<p></p>